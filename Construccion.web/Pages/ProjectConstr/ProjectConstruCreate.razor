@page "/ProjectConstrus/create"
@inject NavigationManager navigationManager
@inject IRepository repository
@inject SweetAlertService sweetAlertService



<h3>Equipo de construccion create</h3>

<ProjectConstrForm @ref="projectConstrForms" ProjectConstr="projectConstrs" OnSubmit="Create" ReturnAction="Return"/>


@code {


    private ProjectConstr projectConstrs = new();
    private ProjectConstrForm projectConstrForms;

    private async Task Create()
    {


        var responseHttp = await repository.PostAsync("/api/ProjectConstrus", projectConstrs);
        if (responseHttp.Error)
        {

            var message = await responseHttp.GetErrorMessage();
            await sweetAlertService.FireAsync("Error", message);
            return;


        }

        Return();
        var toast = sweetAlertService.Mixin(new SweetAlertOptions
            {

                Toast = true,
                Position = SweetAlertPosition.BottomEnd,
                ShowConfirmButton = true,
                Timer = 3000




            });


        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Registro creado con éxito");
    }


    private void Return()
    {
        
        navigationManager.NavigateTo("/ProjectConstrus");
        

    }

}
